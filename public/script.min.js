
var todoapp=angular.module('todoapp',['ngRoute','ngResource']);todoapp.config(function($routeProvider){$routeProvider.when('/',{templateUrl:'pages/homepage/homepage.html',controller:'homePageCtrl'}).when('/todos',{templateUrl:'pages/todopage/todopage.html',controller:'todoPageCtrl'})});todoapp.service('todoService',function(){this.name="NAME NAME";});angular.module('todoapp').controller('homePageCtrl',['$scope',function($scope){}]);angular.module('todoapp').controller('todoPageCtrl',['$scope','todoPageFactory',function($scope,todoPageFactory){var params={createHasInput:false};todoPageFactory.getTodos($scope);$scope.onEditClick=function(todo){todo.isEditing=true;todo.updatedTask=todo.task;};$scope.onCancelClick=function(todo){todo.isEditing=false;};$scope.createTask=_.partial(todoPageFactory.createTask,$scope,params);$scope.updateTask=_.partial(todoPageFactory.updateTask);$scope.changeStatus=_.partial(todoPageFactory.changeStatus);$scope.deleteTask=_.partial(todoPageFactory.deleteTask,$scope);$scope.$watch('createTaskInput',_.partial(todoPageFactory.watchCreateTaskInput,params,$scope));$scope.$watch('createTaskSeverityInput',_.partial(todoPageFactory.watchCreateTaskSeverityInput,params,$scope));}]);angular.module('todoapp').factory('todoPageFactory',todoPageFactory);function todoPageFactory($http,$route){return{createTask:createTask,updateTask:updateTask,changeStatus:changeStatus,deleteTask:deleteTask,watchCreateTaskInput:watchCreateTaskInput,watchCreateTaskSeverityInput:watchCreateTaskSeverityInput,getTodos:getTodos};function getTodos($scope){$http.get('/todos').success(function(response){$scope.todos=response;});};function createTask($scope,params){$http.post('/todos',{severity:$scope.createTaskSeverityInput,task:$scope.createTaskInput,isCompleted:false}).success(function(response){$scope.todos[$scope.todos.length-1]._id=response._id
params.createHasInput=false;$scope.createTaskInput='';});};function updateTask(todo){todo.task=todo.updatedTask;todo.isEditing=false;$http.put('/todos/'+todo._id,{severity:todo.severity,task:todo.updatedTask,isCompleted:todo.isCompleted});};function changeStatus(todo){$http.put('/todos/'+todo._id,{severity:todo.severity,task:todo.task,isCompleted:!todo.isCompleted});todo.isCompleted=!todo.isCompleted;};function deleteTask($scope,todoToDelete){_.remove($scope.todos,function(todo){return todo.task===todoToDelete.task&&todo.$$hashKey===todoToDelete.$$hashKey;});$http.delete('/todos/'+todoToDelete._id);};function watchCreateTaskInput(params,$scope,val){if(!val&&params.createHasInput){$scope.todos.pop();params.createHasInput=false;}else if(val&&!params.createHasInput){var sev=$scope.createTaskSeverityInput;if(sev===undefined){$scope.createTaskInput='';console.log("Choose severity!!!");}else{$scope.todos.push({task:val,isCompleted:false,severity:$scope.createTaskSeverityInput});params.createHasInput=true;}}else if(val&&params.createHasInput){$scope.todos[$scope.todos.length-1].severity=$scope.createTaskSeverityInput;$scope.todos[$scope.todos.length-1].task=val;}};function watchCreateTaskSeverityInput(params,$scope,val){if(val&&params.createHasInput){$scope.todos[$scope.todos.length-1].severity=$scope.createTaskSeverityInput;}};}